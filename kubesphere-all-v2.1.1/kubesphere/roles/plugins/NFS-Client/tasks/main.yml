---
- name: NFS-Client | Getting NFS-Client files
  copy:
    src: "nfs-client-provisioner"
    dest: "{{ kube_config_dir }}/addons/"

- name: NFS-Client | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/nfs-client-provisioner/{{ item.file }}"
  with_items:
    - { name: values, file: values.yaml, type: values }

- name: NFS-Client | Get nfs archiveOnDelete
  shell: >
    {{ bin_dir }}/kubectl get sc nfs-client -o jsonpath='{.parameters.archiveOnDelete}'
  register: nfsArchiveOnDelete
  ignore_errors: True

- name: NFS-Client | Set nfs archiveOnDelete
  set_fact:
    nfs_archiveOnDelete: "{{ nfsArchiveOnDelete.stdout }}"
  when:
    - nfsArchiveOnDelete is defined
    - nfsArchiveOnDelete.stdout is defined


- name: NFS-Client | Deploy NFS-Client
  shell: >
    {{ bin_dir }}/helm upgrade --install nfs-client {{ kube_config_dir }}/addons/nfs-client-provisioner 
    --set nfs.server={{ nfs_server }} 
    --set nfs.path={{ nfs_path }}
    --set storageClass.defaultClass={{ nfs_client_is_default_class }}
    --set storageClass.archiveOnDelete={% if nfs_archiveOnDelete is defined and nfs_archiveOnDelete %}true{% else %}false{% endif %}
    --namespace  kube-system

- name: NFS-Client | Deploy set mountOptions
  shell: >
    {{ bin_dir }}/kubectl patch sc nfs-client -p '{"mountOptions": ["nfsvers=3"]}'
  when:
    - nfs_vers3_enabled is defined and nfs_vers3_enabled
