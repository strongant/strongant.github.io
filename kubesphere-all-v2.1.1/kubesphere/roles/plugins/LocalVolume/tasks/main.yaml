---

- name: openebs | Getting openebs installation files
  file:
    path: "{{ kube_addons_dir }}/local_volume"
    state: directory
    owner: root
    group: root
    mode: 0755


- name: openebs | Creating manifests
  template:
    src: "{{ item.file}}.j2"
    dest: "{{ kube_addons_dir }}/local_volume/{{ item.file }}"
  with_items:
    - { type: sc, file: openebs-lite-sc.yaml }
    - { type: operator, file: openebs-operator-lite.yaml }


- name: openebs | Creating openebs
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_addons_dir }}/local_volume/openebs-operator-lite.yaml"
  register: import
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"


- name: openebs | Creating openebs sc
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_addons_dir }}/local_volume/openebs-lite-sc.yaml"
  register: import
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"


#- name: KubeSphere | Labeling system-workspace
#  shell: >
#    {{ bin_dir }}/kubectl label ns openebs kubesphere.io/workspace=system-workspace
#  register: import
#  failed_when: "import.stderr and 'already' not in import.stderr"
#- name: check openebs is ok
#  shell: >
#    {{ bin_dir }}/kubectl get pod -n openebs | grep provisioner | grep Running
#  register: openebs_check
#  until: openebs_check.stdout.find("Running") != -1
#  retries: 30
#  delay: 30
#  ignore_errors: yes
#
##- name: openebs failed and how to solve
##  fail:
##     msg: "Please follow the steps below \n kubectl describe pod -n openebs `kubectl get pod -n openebs |grep provisioner|awk '{print $1}'` "
##  when: "openebs_check.rc!=0"

 

