---
- hosts: kube-master
  gather_facts: false
  tasks:
    - name: Getting kubernetes version
      shell: >
        cat /etc/kubernetes/manifests/kube-apiserver.yaml | grep 'image:' | awk -F '[:]' '{print $(NF-0)}'
      register: apiserver_version

    - name: Remove old tmp file
      shell: >
        rm -f k8s_version.tmp
      delegate_to: localhost

    - name: Creating k8s_version.tmp
      shell: >
        echo "{{ apiserver_version.stdout }}" >> k8s_version.tmp
      delegate_to: localhost

    - name: Getting minmum k8s version
      shell: >
        cat k8s_version.tmp | sort | head -n 1
      register: k8sversion
      delegate_to: localhost

- hosts: kube-master[0]
  gather_facts: false
  tasks:
    - name: Getting etcd version
      shell: "{{ bin_dir }}/etcdctl -v | awk '{if(NR==1) {print $3}}'"
      register: etcdversion

    - name: Getting kube_proxy_mode
      shell: >
        {{ bin_dir }}/kubectl describe cm -n kube-system kube-proxy | grep mode | awk '{print $2}'
      register: kubeproxymode

    - name: Getting kube_service_addresses
      shell: >
        {{ bin_dir }}/kubeadm config view | grep serviceSubnet | awk '{print $2}'
      register: servicesubnet

    - name: Getting kube_pods_subnet
      shell: >
        {{ bin_dir }}/kubeadm config view | grep podSubnet | awk '{print $2}'
      register: podsubnet

    - name: Getting ks-version
      shell: >
        {{ bin_dir }}/kubectl get deploy -n  kubesphere-system ks-console -o jsonpath='{.metadata.labels.version}'
      register: ksversion

    - name: Creating version.tmp
      shell: >
        echo '' > version.tmp &&
        echo "Upgrade_Confirmation" >> version.tmp &&
        echo '' >> version.tmp
        {%- if ksversion.stdout not in ks_version %} && echo "ks_version: {{ ksversion.stdout }} to {{ ks_version }}" >> version.tmp {% endif %}
        {%- if kube_version not in k8sversion.stdout %} && echo "k8s_version: {{ k8sversion.stdout }} to {{ kube_version }}" >> version.tmp {% endif %}
        {%- if etcdversion.stdout not in etcd_version %} && echo "etcd_version: v{{ etcdversion.stdout }} to {{ etcd_version }}" >> version.tmp {% endif %}
        {%- if kubeproxymode.stdout not in kube_proxy_mode %} && echo "kube_proxy_mode: {{ kubeproxymode.stdout }} to {{ kube_proxy_mode }}" >> version.tmp {% endif %}
        {%- if servicesubnet.stdout not in kube_service_addresses %} && echo "kube_service_addresses: {{ servicesubnet.stdout }} to {{ kube_service_addresses }}    nonsupport" >> version.tmp {% endif %}
        {%- if podsubnet.stdout not in kube_pods_subnet %} && echo "kube_pods_subnet: {{ podsubnet.stdout }} to {{ kube_pods_subnet }}     nonsupport" >> version.tmp  {% endif %}
        && echo '' >> version.tmp
      delegate_to: localhost

