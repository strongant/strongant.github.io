---
- name: NeonSAN-CSI | Getting NeonSAN-CSI installation files
  copy:
    src: "neonsan-csi"
    dest: "{{ kube_config_dir }}/addons/"

- name: NeonSAN-CSI | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/neonsan-csi/{{ item.file }}"
  with_items:
    - { name: qbd, file: qbd.conf, type: config }
    - { name: sc, file: sc.yaml, type: sc }
    - { name: ds-node, file: ds-node.yaml, type: ds }
    - { name: sts-controller, file: sts-controller.yaml, type: sts }
  when: inventory_hostname == groups['kube-master'][0]

- name: NeonSAN-CSI | Creating Configmap
  command: "{{ bin_dir }}/kubectl create configmap csi-neonsan --from-file=qbd.conf={{ kube_config_dir }}/addons/neonsan-csi/qbd.conf --namespace=kube-system"
  register: import 
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"
  when: inventory_hostname == groups['kube-master'][0]

- name: NeonSAN-CSI | Creating CRD object
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/addons/neonsan-csi/{{ item }} --validate=false"
  loop:
    - crd-csidriver.yaml
    - crd-csinodeinfo.yaml
  register: import 
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"
  when: inventory_hostname == groups['kube-master'][0]

- name: NeonSAN-CSI | Deploy plugin
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/addons/neonsan-csi/{{ item }}"
  loop:
    - csidriver.yaml
    - rbac-controller.yaml
    - rbac-node.yaml
    - sts-controller.yaml
    - ds-node.yaml
    - sc.yaml
  register: import 
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"
  when: inventory_hostname == groups['kube-master'][0]
